version: 2.1

orbs:
  docker: circleci/docker@1.4.0

jobs:
  test:
    docker:
      - image: circleci/golang:1.13-node

    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-{{ checksum "go.sum" }}
      - run:
          name: "Run unit tests"
          environment:
            TEST_RESULTS: /tmp/test-results
          command: |
            mkdir -p $TEST_RESULTS
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES
      - save_cache:
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results

  lint:
    docker:
      - image: circleci/golang:1.13-node

    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-{{ checksum "go.sum" }}
      - run:
          name: Install golint
          command: go get golang.org/x/lint/golint
      - run:
          name: Lint & check
          command: make check

  acceptance:
    docker:
      - image: circleci/golang:1.13-node

    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-{{ checksum "go.sum" }}
      - run:
          name: Build binary
          command: go build -o conftest main.go
      - save_cache:
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Install Bats
          command: |
            cd /tmp
            curl -L https://github.com/sstephenson/bats/archive/v0.4.0.tar.gz | tar -xz
            sudo ./bats-0.4.0/install.sh /usr/local
      - run:
          name: Run acceptance tests
          command: |
            sudo npm install tap-xunit -g
            mkdir -p ~/reports
            bats acceptance.bats --tap | tap-xunit > ~/reports/conftest.xml
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports

  buildimage:
    docker:
      - image: circleci/golang:1.13-node

    steps:
      - checkout
      - setup_remote_docker
      - docker/build:
          image: openpolicyagent/conftest

  release_docker:
    docker:
      - image: circleci/golang:1.13-node
    
    environment:
      DOCKER_BUILDKIT: 1

    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run:
          name: Setup docker build environment
          command: |
            GIT_COMMIT=$(git rev-parse HEAD)
            DATE=$(date)
            echo 'export GIT_COMMIT="$GIT_COMMIT"' >> $BASH_ENV
            echo 'export DATE="$DATE"' >> $BASH_ENV
      - docker/build:
          image: openpolicyagent/conftest
          extra_build_args: "--build-arg VERSION=$CIRCLE_TAG --build-arg COMMIT=$GIT_COMMIT --build-arg DATE=$DATE"
          tag: $CIRCLE_TAG,latest
      - docker/push:
          image: openpolicyagent/conftest
          tag: $CIRCLE_TAG,latest
      - docker/build:
          image: openpolicyagent/conftest
          extra_build_args: '--target examples'
          tag: examples
      - docker/push:
          image: openpolicyagent/conftest
          tag: examples

  release_binaries:
    docker:
      - image: circleci/golang:1.13-node

    steps:
      - checkout
      - run: 
          name: Publish binaries
          command: curl -sL https://git.io/goreleaser | bash

workflows:
  build:
    jobs:
      - test
      - lint
      - acceptance
      - buildimage
      - release_docker:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - release_binaries:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
